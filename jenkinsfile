def GIT_URL = 'https://github.com/sheikfarzand/hashbrown-cms.git'
def ANSIBLE_GIT_URL = 'https://github.com/sheikfarzand/lt-ansible-infra.git'

node {
    stage ('Clone') {
        checkout([$class: 'GitSCM', branches: [[name: 'stable']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'WipeWorkspace'], [$class: 'SubmoduleOption', disableSubmodules: false, parentCredentials: false, recursiveSubmodules: true, reference: '', trackingSubmodules: false]], submoduleCfg: [], userRemoteConfigs: [[url: GIT_URL]]])
    }
    
    stage ('npm install') {
        sh 'npm install --production'
        sh 'tar -zcf pack.tar.gz *'
    }
    
    stage ('Clone ansible repo') {
        git ANSIBLE_GIT_URL
        sh 'ansible-playbook IaaC_infra.yml'
    }

    stage ('Deploy the package in remote') {
        sh 'scp pack.tar.gz 18.221.201.224:/opt/'
        try {
            sh 'docker -H tcp://18.221.201.224:4243 rm hashbrown-cms--node hashbrown-cms--mongodb -f'
        } catch(Exception ex) {
            echo "Container does not exist, moving on ..."
        }
        sh 'ssh 18.221.201.224 rm -rf /opt/hashbrown'
        sh 'ssh 18.221.201.224 mkdir /opt/hashbrown'
        sh 'ssh 18.221.201.224 "cd /opt && tar -xzf pack.tar.gz -C /opt/hashbrown"'
    }

    
    stage ('Docker compose') {
        sh 'ssh 18.221.201.224 "cd /opt/hashbrown && /usr/bin/docker-compose up --build -d"'
    }

    stage ('Final end point and URL') {
        sh 'set +x; echo End point url >>>>>>>> http://18.221.201.224:8082'
    }
}
